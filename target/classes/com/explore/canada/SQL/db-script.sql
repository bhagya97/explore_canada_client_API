DROP TABLE USER_INFO;
CREATE TABLE USER_INFO
(
    USER_ID VARCHAR(25) NOT NULL,
    USER_EMAIL VARCHAR(50) NOT NULL,
    USER_FIRST_NAME VARCHAR(150),
    USER_LAST_NAME VARCHAR(150),
    USER_PASSWORD VARCHAR(250),
    USER_DATE_OF_BIRTH VARCHAR(15),
    USER_IS_ACTIVE VARCHAR(1),
    constraint PK_USER_INFO PRIMARY KEY (USER_EMAIL)
);

DELIMITER $$

DROP PROCEDURE IF EXISTS spRegisterUser $$

CREATE PROCEDURE spRegisterUser (
    IN userId VARCHAR(20),
    IN userFirstName VARCHAR(100),
    IN userLastName VARCHAR(100),
    IN userEmail VARCHAR(320),
    IN userPassword VARCHAR(76),
    IN userDateOfBirth VARCHAR(15),
    IN userIsActive VARCHAR(1),
    OUT id VARCHAR(20)
)
BEGIN
    INSERT INTO USER_INFO(user_id, user_email, user_first_name, user_last_name, user_password, user_date_of_birth, user_is_active)
    VALUES (userId, userEmail,userFirstName,userLastName,userPassword,userDateOfBirth,userIsActive);

    SELECT USER_ID
    INTO @id
    FROM USER_INFO
    WHERE USER_ID = userId;
END $$

DELIMITER ;



DELIMITER $$

DROP PROCEDURE IF EXISTS spLoadUserByEmailID $$

CREATE PROCEDURE spLoadUserByEmailID (
    IN emailID VARCHAR(320)
)
BEGIN
    SELECT USER_ID, USER_EMAIL, USER_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_DATE_OF_BIRTH
    FROM USER_INFO
    WHERE USER_INFO.USER_EMAIL = emailID and USER_INFO.USER_IS_ACTIVE = 'Y';
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS spLoadUserByID $$

CREATE PROCEDURE spLoadUserByID (
    IN userID VARCHAR(25)
)
BEGIN
    SELECT USER_ID, USER_EMAIL, USER_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_DATE_OF_BIRTH
    FROM USER_INFO
    WHERE USER_INFO.USER_ID = userID and USER_INFO.USER_IS_ACTIVE = 'Y';
END $$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS spLoadAllUsers $$

CREATE PROCEDURE spLoadAllUsers ()
BEGIN
    SELECT USER_ID, USER_EMAIL, USER_PASSWORD,USER_FIRST_NAME,USER_LAST_NAME,USER_DATE_OF_BIRTH
    FROM USER_INFO
    WHERE USER_INFO.USER_IS_ACTIVE = 'Y';
END $$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS spDeleteUserByEmailID $$

CREATE PROCEDURE spDeleteUserByEmailID (
    IN emailID VARCHAR(320)
)
BEGIN
    UPDATE USER_INFO SET USER_INFO.USER_IS_ACTIVE = 'N'
    WHERE USER_INFO.USER_EMAIL = emailID and USER_INFO.USER_IS_ACTIVE = 'Y';
END $$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS spUpdateUserByEmailID $$

CREATE PROCEDURE spUpdateUserByEmailID (
    IN userEmail VARCHAR(320),
    IN userFirstName VARCHAR(100),
    IN userLastName VARCHAR(100),
    IN userDateOfBirth VARCHAR(15)
)
BEGIN
    UPDATE USER_INFO SET USER_INFO.USER_FIRST_NAME = userFirstName,
                         USER_INFO.USER_LAST_NAME = userLastName,
                         USER_INFO.USER_DATE_OF_BIRTH = userDateOfBirth
    WHERE USER_INFO.USER_EMAIL = userEmail and USER_INFO.USER_IS_ACTIVE = 'Y';
END $$

DELIMITER ;